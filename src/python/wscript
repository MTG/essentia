#!/usr/bin/env python
# -*- coding: utf-8 -*-

import distutils.sysconfig
import os


def options(ctx):
    ctx.load('python')


def configure(ctx):
    ctx.load('python')
    ctx.check_python_version((2,6,0))
    ctx.check_python_headers()

def adjust(objs, path):
    return [ '%s/%s' % (path, obj) for obj in objs ]

def build(ctx):
    print('â†’ building from ' + ctx.path.abspath())

    # gets the path from the active virtualenv
    PYLIB = distutils.sysconfig.get_python_lib()
    #print('-'*100)
    #print('ctx.env', ctx.env)
    #print('-'*100)
    NUMPY_INCPATH = [ # virtualenv path
                      os.path.join(PYLIB, 'numpy', 'core', 'include'),
                      # system python path
                      os.path.join(ctx.env.PYTHONDIR, 'numpy', 'core', 'include') ]

    pybindings = ctx.shlib(
        source   = ctx.path.ant_glob('essentia.cpp parsing.cpp pytypes/*.cpp'),
        target   = '_essentia',
        features = 'pyext',
        includes = NUMPY_INCPATH + [ '.', 'pytypes' ] + adjust(ctx.env.INCLUDES, '..'),
        cxxflags = [ '-w' ],
        install_path = '${PYTHONDIR}/essentia',
        use      = 'essentia ' + ctx.env.USES
    )

    # FIXME: this doesn't install in the active virtualenv but in the system python...
    ctx.install_files('${PYTHONDIR}', ctx.path.ant_glob('essentia/**/*.py'),
                      relative_trick=True)
