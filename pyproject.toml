[tool.cibuildwheel]

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "mtgupf/essentia-builds:manylinux2014_x86_64"
manylinux-i686-image = "mtgupf/essentia-builds:manylinux2014_i686"

skip = ["pp*", "*-musllinux*", "*i686"]

environment = { PROJECT_NAME="essentia", ESSENTIA_PROJECT_NAME="${PROJECT_NAME}", ESSENTIA_WHEEL_SKIP_3RDPARTY=1, ESSENTIA_WHEEL_ONLY_PYTHON=1 }

before-all = [
  "PYBIN=/opt/python/cp36-cp36m/bin/",
  "\"${PYBIN}/python\" waf configure --with-gaia --build-static --static-dependencies --pkg-config-path=\"${PKG_CONFIG_PATH}\"",
  "\"${PYBIN}/python\" waf",
  "\"${PYBIN}/python\" waf install"
]

test-command = "python -c 'import essentia; import essentia.standard; import essentia.streaming; from essentia.standard import MonoLoader, MetadataReader, YamlInput, Chromaprinter'"


[tool.cibuildwheel.macos]

skip = ["pp*"]

environment = { PROJECT_NAME="essentia", ESSENTIA_PROJECT_NAME="${PROJECT_NAME}", ESSENTIA_WHEEL_SKIP_3RDPARTY=1, ESSENTIA_WHEEL_ONLY_PYTHON=1 }

before-all = [
  "brew install pkg-config gcc readline sqlite gdbm freetype libpng",
  "brew install eigen libyaml fftw ffmpeg@2.8 libsamplerate libtag chromaprint",
  "brew link --force ffmpeg@2.8",
  #"brew tap MTG/essentia",
  #"brew install gaia --HEAD",
  "python waf configure --pkg-config-path=\"${PKG_CONFIG_PATH}\"",
  "python waf",
  "python waf install"
]

test-command = "python -c 'import essentia; import essentia.standard; import essentia.streaming; from essentia.standard import MonoLoader, MetadataReader, YamlInput, Chromaprinter'"


[build-system]

requires = ["wheel", "setuptools", "oldest-supported-numpy"]
